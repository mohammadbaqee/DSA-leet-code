Move Zeroes

QUESTION:
Given an integer array nums, move all 0's to the end of it while maintaining the relative order of the non-zero elements.
Note that you must do this in-place without making a copy of the array.

Example 1:
Input: nums = [0,1,0,3,12]
Output: [1,3,12,0,0]

Example 2:
Input: nums = [0]
Output: [0]
 

Constraints:
1 <= nums.length <= 104
-231 <= nums[i] <= 231 - 1
 
Follow up: Could you minimize the total number of operations done?

ANSWER:
def moveZeroes(nums) -> None:
    """
    Do not return anything, modify nums in-place instead.
    """
    #this solution is correct but does not uses two pointers..
    # if len(nums)>1:
    #     for i in nums:
    #         if i==0:
    #             nums.remove(i)
    #             nums.append(i)
  
    #This solution uses the two pointera
    left = 0
    for right in range(len(nums)):
        if nums[right] != 0 and nums[left]==0:
            nums[right],nums[left] = nums[left],nums[right]
        if nums[left] != 0:
            left += 1

nums = [0,1,0,3,12]
moveZeroes(nums)

